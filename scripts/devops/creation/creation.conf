
devops.creation {

	region-id         = cn-beijing
	access-key-id     = ${DEVOPS_ACCESS_KEY_ID}
	access-key-secret = ${DEVOPS_ACCESS_KEY_SECRET}  // get data from os.Getenv


	ecs {

		vpc {
			// id = ""
			// name = "network_01"
			cidr-block = "172.16.0.0/16"
			description = ""
		}


		vswitch {
			// id = ""
			// name = "switch_01"
			zone-id = "cn-beijing-a"
			cidr-block = "172.16.0.0/24"
		}
	}

	oss {
		clusters-driver {
			perm = "private"
		}
	}

	rds {
		services-db {
			engine                = "MySQL"
			engine-version        = "5.6"
			pay-type              = "Postpaid"

			zone-id               = ""
			
			instance-class        = "rds.mys2.small"
			instance-storage      = 5
			instance-net-type     = "Intranet"
			instance-description  = ""
			instance-network-type = "VPC"

			connection-mode       = "Performance"
			
			used-time             = ""
			period                = "" // 预付费才需要填写 Hour, Day, Month, Year
			
			security-ip-list      = "172.18.0.0/24,172.16.0.0/16"
			private-ip-address    = ""

			databases {
				gitlabhq_production {
					character-set = utf8
					description   = "gitlab database"
				}
			}

			accounts {
				gitlab {
					type        = "Normal"
					password    = "5PbLqmG5XtFFvnTD"  // pwgen -Bsv1 16
					description = ""
					databases    {
						gitlabhq_production {
							privilege = "ReadWrite"
						}
					}
				}
			}
		}
	}

	ram {

	}

	slb {
		slb_docker_cluster_1_gitlab {
			
			address-type = "internet"
			band-width   = 100
			charge-type  = "paybytraffic"


			tcp-listeners {
				
				port-ssh {

					listen-port = 10022
					server-port = 10022
					band-width  = 100

					vserver-group     = off
					vserver-group-id  = ""
					

					scheduler = wrr
					
					persistence-timeout = 0

					health-check {
						type                = tcp
						domain              = ""
						url                 = ""
						connect-port        = 0
						threshold           = 3
						unhealthy-threshold = 3
						timeout             = 5
						interval            = 2
						http-code           = "http_2xx"
					}
				}
			}

			http-listeners {

				port-web {

					listen-port = 80
					server-port = 10080
					band-width  = 100

					x-forwarded-for-slbip = off
					x-forwarded-for-slbid = off
					x-forwarded-for_proto = off

					scheduler = wrr
					
					sticky-session      = off
					sticky-session-type = insert

					gzip = on

					cookie         = ""
					cookie-timeout = 86400
					
					vserver-group     = off
					vserver-group-id  = ""

					health-check {
						check               = off
						domain              = ""
						url                 = ""
						connect-port        = 0
						threshold           = 3
						unhealthy-threshold = 3
						timeout             = 5
						interval            = 2
						http-code           = "http_2xx"
					}
				}
			}
		}
	}

	docker {

		clusters {

			services {

				cluster {
					// id =               = ""
					size              = 1
					instance-type     = "ecs.n4.large"
					network-mode      = "vpc"
					subnet-cidr       = "172.18.0.0/24"
					// vpc-id            = "vpc-2zedhlyylx5o2buhq341s"
					// vswitch-id        = "vsw-2ze3nsxlj4tx9039u9ecm"
					password           = "76jeubT7wyc32wG7"
					data-disk-category = cloud_ssd
					data-disk-size     = 200
					io-optimized       = optimized
					ecs-image-id       = ""
				}

				volumes {
					oss-test {

						driver = "ossfs"

						options {
							bucket        = "clusters-driver"
							ak-id         = ${DEVOPS_ACCESS_KEY_ID}
							ak-secret     = ${DEVOPS_ACCESS_KEY_SECRET}
							url           = "oss-cn-beijing-internal.aliyuncs.com"
							no_stat_cache = false
							other_opts    = ""
						}
					}
				}

				projects {

					openldap {
						version       = "1.0.0"
						template      = "templates/openldap.yml"
						latest-image  = true
						description   = ""
						environment   = {include "env/openldap.conf"}
					}

					phpldapadmin {
						version       = "1.0.0"
						template      = "templates/phpldapadmin.yml"
						latest-image  = true
					}

					gitlab {
						version       = "1.0.0"
						template      = "templates/gitlab.yml"
						latest-image  = true
						description   = ""
						environment   = {include "env/gitlab.conf"}
					}

					gitlab-runner-golang {
						version       = "1.0.0"
						template      = "templates/gitlab-runner-golang.yml"
						latest-image  = true
						description   = ""
					}

					graylog {
						version       = "1.0.0"
						template      = "templates/graylog.yml"
						latest-image  = true
						description   = ""
						environment   = {include "env/graylog.conf"}
					}
				}
			}
		}
	}
}